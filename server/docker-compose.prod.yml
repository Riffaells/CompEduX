version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - backend

  # Сервис аутентификации
  auth_service:
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    container_name: auth_service
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - ENV=production
      - DEBUG=false
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${AUTH_SERVICE_PORT}:8000"
    restart: always
    networks:
      - backend

  # API Gateway
  api_gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: api_gateway
    env_file:
      - .env
    environment:
      - ENV=production
      - DEBUG=false
    depends_on:
      - auth_service
    ports:
      - "${API_GATEWAY_PORT}:8000"
    restart: always
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
